
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { installDatabaseFunctions } from '@/utils/dbFunctions';

const SUPABASE_URL = "https://cifbetjefyfocafanlhv.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNpZmJldGplZnlmb2NhZmFubGh2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE4NzgzODIsImV4cCI6MjA1NzQ1NDM4Mn0.B1-2XP0VVByxEq43KzoGml8W6z_XVtsh542BuiDm3Cw";

// Create a singleton instance for the public client
let supabaseInstance = null;

// Function to get supabase client with anon key
export const getSupabaseClient = () => {
  if (!supabaseInstance) {
    supabaseInstance = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        persistSession: true,
        autoRefreshToken: true,
        detectSessionInUrl: true,
      },
      global: {
        headers: {
          'Content-Type': 'application/json',
        },
      },
    });
  }
  return supabaseInstance;
};

// Create a dedicated client for file uploads without Content-Type header
let fileUploadClientInstance = null;

export const getFileUploadClient = () => {
  if (!fileUploadClientInstance) {
    fileUploadClientInstance = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        persistSession: true,
        autoRefreshToken: true,
        detectSessionInUrl: true,
      },
      // No global headers for file uploads to allow proper MIME type detection
    });
  }
  return fileUploadClientInstance;
};

/**
 * SECURITY NOTE: Admin functionality has been moved to edge functions
 * Service role keys should never be exposed to the frontend
 * @deprecated Use edge functions for admin operations instead
 * @returns Standard client (admin operations disabled for security)
 */
export const getAdminSupabaseClient = () => {
  console.warn('Admin client access from frontend is disabled for security. Use edge functions for admin operations.');
  return getSupabaseClient(); // Return standard client only
};

// For backwards compatibility
export const supabase = getSupabaseClient();

// Export storage URL and key properly as constants instead of properties
export const STORAGE_URL = `${SUPABASE_URL}/storage/v1`;
export const SUPABASE_KEY = SUPABASE_PUBLISHABLE_KEY;

// Export constants for use in other modules
export { SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY };

// Initialize database functions
export const initDatabaseFunctions = async () => {
  try {
    return await installDatabaseFunctions();
  } catch (error) {
    console.error("Failed to initialize database functions:", error);
    return false;
  }
};
